//Some neat Gradle plugins that we need
apply plugin: 'java'
apply plugin: 'jetty'

repositories {

    //We'll get all our dependencies from Maven Central
    mavenCentral()
}

dependencies {

    //Jackson (json deserialization)
    compile 'org.glassfish.jersey.media:jersey-media-json-jackson1:2.13'

    //Guice, because dependency injection is good
    compile 'com.google.inject:guice:3.0'
    compile 'com.google.inject.extensions:guice-servlet:3.0'

    //Jersey for REST services
    compile 'org.glassfish.jersey.core:jersey-client:2.13'
    compile 'org.glassfish.jersey.core:jersey-server:2.2'
    compile 'org.glassfish.hk2:guice-bridge:2.3.0'
    compile 'org.glassfish.jersey.containers:jersey-container-servlet-core:2.13'
    
    //Webjars, to serve up web-side things
    compile 'org.webjars:webjars-servlet-2.x:1.1'

    
    //AngularJS through webjars
    compile 'org.webjars:angularjs:1.4.4'
    compile 'org.webjars:jquery:2.0.3-1'
    compile 'org.webjars:less:2.5.0'

    //Jetty, becuase it works well with gradle out of the box
    compile 'jetty:javax.servlet:5.1.12'

    //JUnit, because you should test things
    testCompile 'junit:junit:4.11'
}

/**
 * Everything below is setup so that you can easily setup an HTTPS connection
 * Just set the key/truststore paths and passwords, and you're good to go!
 */
//def keystorePath
//def keystorePassword
//def password
//def truststorePath
//def truststorePassword
//
//[jettyRun, jettyRunWar]*.configure {
//    def httpsConnector = jettyRun.class.classLoader.loadClass('org.mortbay.jetty.security.SslSocketConnector').newInstance()
//    httpsConnector.setPort(443)
//    httpsConnector.setKeystore(keystorePath)
//    httpsConnector.setKeyPassword(keystorePassword)
//    httpsConnector.setPassword(password)
//    httpsConnector.setTruststore(truststorePath)
//    httpsConnector.setTrustPassword(truststorePassword)
//    def httpConnector = jettyRun.class.classLoader.loadClass('org.mortbay.jetty.nio.SelectChannelConnector').newInstance()
//    httpConnector.setPort(80)
//    httpConnector.setConfidentialPort(443)
//    connectors = [httpConnector, httpsConnector]
//}
//[jettyRun, jettyRunWar]*.contextPath = '/'
